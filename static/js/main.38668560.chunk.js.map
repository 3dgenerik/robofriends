{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","username","website","className","alt","src","CardList","robotsList","robots","map","robot","idx","SearchBox","searchRobots","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","scrollHeight","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchRobots","event","searchField","target","value","fetch","then","response","json","users","filterRobots","filter","toLowerCase","trim","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAgBeA,EAdF,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,GAAIC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACtC,OACI,sBAAKC,UAAS,uEAAd,UACI,6BAAKF,IACL,mBAAGE,UAAY,IAAf,SAAoBD,IACpB,qBAAKE,IAAM,QAAQC,IAAG,+BAA4BP,EAA5B,cACtB,gCACI,6BAAKC,IACL,mBAAGI,UAAY,IAAf,SAAoBH,WCUrBM,EAjBE,SAAC,GAAc,IAMtBC,EANqB,EAAZC,OAMWC,KAAI,SAACC,EAAOC,GAClC,OAAO,cAAC,EAAD,CAAkBZ,KAAQW,EAAMX,KAAMD,GAAMY,EAAMZ,GAAIE,MAASU,EAAMV,MAAOC,SAAYS,EAAMT,SAAUC,QAAWQ,EAAMR,SAA5GS,MAGxB,OACI,8BACKJ,KCAEK,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,8BACI,uBACIV,UAAa,uCACbW,KAAO,SACPC,YAAc,kBACdC,SAAYH,OCCbI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAU,SAAUC,OAAQ,iBAAkBC,OAAQJ,EAAMK,aAAe,MAA1F,SACKL,EAAMM,YCmBJC,E,kDArBX,WAAYP,GAAO,IAAD,8BACd,cAAMA,IACDQ,MAAQ,CACTC,UAAU,GAHA,E,8DAOAC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAKzB,OAAGG,KAAKJ,MAAMC,SACH,6DAGJG,KAAKZ,MAAMM,a,GAlBEQ,aCmDZC,E,kDA9CX,aAAc,IAAD,8BACT,gBAmBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAlBxC,EAAKZ,MAAQ,CACTlB,OAAO,GACP4B,YAAa,IALR,E,gEASO,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAACvB,OAAOmC,S,+BASrB,IAAD,EAC0Bb,KAAKJ,MAA5BlB,EADH,EACGA,OAAQ4B,EADX,EACWA,YACTQ,EAAepC,EAAOqC,QAAO,SAACnC,GAChC,OAAOA,EAAMT,SAAS6C,cAAcC,OAAOC,SAASZ,EAAYU,cAAcC,WAElF,OAAQvC,EAAOyC,OAIP,sBAAK9C,UAAY,KAAjB,UACI,+CACA,cAAC,EAAD,CAAWU,aAAgBiB,KAAKI,iBAChC,cAAC,EAAD,CAAQX,aAAgB,IAAxB,SACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUf,OAAUoC,WARpC,gD,GA/BMZ,aCMHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.38668560.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({id, name, email, username, website} ) => {\r\n    return(\r\n        <div className = {`bg-light-green br3 dib grow pa3 ma3 tc ba b--dark-green bw1 shadow-5`}>\r\n            <h2>{username}</h2>\r\n            <p className = 'i'>{website}</p>\r\n            <img alt = \"robot\" src = {`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h1>{name}</h1>\r\n                <p className = 'i'>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from '../components/Card'\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    // if(true){\r\n    //     throw new Error(\"ERROOOOOOR\");\r\n    // }\r\n\r\n    const robotsList = robots.map((robot, idx) => {\r\n        return <Card key = {idx} name = {robot.name} id = {robot.id} email = {robot.email} username = {robot.username} website = {robot.website}/>\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {robotsList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchRobots}) => {\r\n    return(\r\n        <div>\r\n            <input\r\n                className = {'pa3 ba b--green bg-lightest-blue br3'}\r\n                type = 'search'\r\n                placeholder = 'type robot name'\r\n                onChange = {searchRobots}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style = {{overflowY:'scroll', border: '1px solid grey', height: props.scrollHeight + 'px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n\r\n    render(){\r\n       if(this.state.hasError){\r\n           return <h1>Oooops, there is some error</h1>\r\n       }\r\n\r\n       return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            robots:[],\r\n            searchField: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then(users => {\r\n            this.setState({robots:users});\r\n            // {};\r\n        })\r\n    }\r\n\r\n    onSearchRobots = (event) =>{\r\n        this.setState({searchField:event.target.value});\r\n    }\r\n\r\n    render(){\r\n        const {robots, searchField} = this.state;\r\n        const filterRobots = robots.filter((robot) => {\r\n            return robot.username.toLowerCase().trim().includes(searchField.toLowerCase().trim());\r\n        });\r\n        return !robots.length ?\r\n            <h1>loading...</h1>\r\n            :\r\n            (\r\n                <div className = 'tc'>\r\n                    <h1>Robot friends</h1>\r\n                    <SearchBox searchRobots = {this.onSearchRobots}/>\r\n                    <Scroll scrollHeight = {800}>\r\n                        <ErrorBoundry>\r\n                            <CardList robots = {filterRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}